<Window x:Class="MVVMCore.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MVVMCore"
        xmlns:elements="clr-namespace:WpfElements;assembly=WpfElements"
        mc:Ignorable="d"
        Title="{Binding Title}" Height="650" Width="800">
  <Window.Resources>
    <DataTemplate x:Key="LoadingButton_Template">
      <StackPanel Orientation="Horizontal">
        <Grid Width="20" >
          <!-- Картинка индикатор загрузки -->
          <Image x:Name="SpinImage"
                 Source="pack://application:,,,/Images/circle.png"
                 RenderOptions.BitmapScalingMode="HighQuality" RenderTransformOrigin="0.5,0.5">
            <Image.RenderTransform>
              <RotateTransform x:Name="ImageRotateTransform" Angle="0"/>
            </Image.RenderTransform>
            <Image.Style>
              <Style TargetType="Image">
                <Setter Property="Visibility" Value="Hidden"/>
                <Style.Triggers>
                  <!-- Синхронизированная крутилка для всех -->
                  <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                    <BeginStoryboard  x:Name="SpinningStoryboard">
                      <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="(Image.RenderTransform).(Angle)"
                                         From="0" To="360" Duration="00:00:01.000" RepeatBehavior="Forever"/>
                      </Storyboard>
                    </BeginStoryboard>
                  </EventTrigger>
                  <DataTrigger Binding="{Binding IsBusy}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </Image.Style>
          </Image>
          <Image RenderOptions.BitmapScalingMode="HighQuality">
            <Image.Style>
              <Style TargetType="Image">
                <Setter Property="Visibility" Value="Collapsed"/>
                <Style.Triggers>
                  <!-- Картинка OnHold -->
                  <DataTrigger Binding="{Binding IsOnHold}" Value="True">
                    <Setter Property="Source" Value="pack://application:,,,/Images/onhold.png"/>
                    <Setter Property="Visibility" Value="Visible"/>
                  </DataTrigger>
                  <!-- Картинка всё Ок -->
                  <DataTrigger Binding="{Binding Status, Converter={StaticResource EnumEqualsParameterConverter}, ConverterParameter=OK}" Value="True">
                    <Setter Property="Source" Value="pack://application:,,,/Images/check.png"/>
                    <Setter Property="Visibility" Value="Visible"/>
                  </DataTrigger>
                  <!-- Картинка проблемы -->
                  <DataTrigger Binding="{Binding Status, Converter={StaticResource EnumEqualsParameterConverter}, ConverterParameter=NegativeResult}" Value="True">
                    <Setter Property="Source" Value="pack://application:,,,/Images/error.png"/>
                    <Setter Property="Visibility" Value="Visible"/>
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </Image.Style>
          </Image>
        </Grid>
        <FrameworkElement Width="20"/>
        <Button Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:MainWindow}}, Path=DataContext.LoadEmulationCommand}"
                CommandParameter="{Binding }"
                Width="170" Height="25"
                >
          <!--IsEnabled="{Binding IsBusy, Converter={StaticResource InvertBoolConverter}}"-->
          <Button.IsEnabled>
            <MultiBinding Converter="{StaticResource MultiBoolConverter}"
                          ConverterParameter="XOR">
              <Binding Path="IsBusy"/>
              <Binding Path="IsOnHold"/>
            </MultiBinding>
          </Button.IsEnabled>
          <TextBlock Text="{Binding }"/>
        </Button>
      </StackPanel>
    </DataTemplate>


  </Window.Resources>
  <Canvas>
    <StackPanel Orientation="Horizontal" Canvas.Top="150" Canvas.Left="250">
      <Image x:Name="SpinImage"
             Source="pack://application:,,,/Images/circle.png" Width="20" RenderOptions.BitmapScalingMode="HighQuality"
             RenderTransformOrigin="0.5,0.5">
        <Image.RenderTransform>
          <RotateTransform x:Name="ImageRotateTransform" Angle="0"/>
        </Image.RenderTransform>
        <Image.Style>
          <Style TargetType="Image">
            <Setter Property="Visibility" Value="Hidden"/>
            <Style.Triggers>
              <DataTrigger Binding="{Binding IsBusy}" Value="True">
                <DataTrigger.EnterActions>
                  <BeginStoryboard>
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetProperty="(Image.RenderTransform).(Angle)"
                                       From="0" To="360" Duration="00:00:01.000" RepeatBehavior="Forever"/>
                    </Storyboard>
                  </BeginStoryboard>
                </DataTrigger.EnterActions>
              </DataTrigger>
              <DataTrigger Binding="{Binding IsBusy}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </Image.Style>
      </Image>
      <FrameworkElement Width="20"/>
      <Button Style="{DynamicResource ButtonStyle2}" Command="{Binding ChangeTitleCommand}" IsEnabled="{Binding IsBusy, Converter={StaticResource InvertBoolConverter}}" Width="170" Height="25" >
        <TextBlock Text="{Binding TitleButtonText}"/>
      </Button>
    </StackPanel>


    <Grid Canvas.Left="295" Canvas.Top="187">
      <Grid.RowDefinitions>
        <RowDefinition/>
        <RowDefinition/>
      </Grid.RowDefinitions>
      <!-- Refresh button -->
      <Button Height="30" Width="30" Grid.Row="0" HorizontalAlignment="Left" Margin="0,0,0,1"
              Style="{DynamicResource TaskContainer_RefreshButton}"
              Command="{Binding RefreshAllCommand}"
              IsEnabled="{Binding LoadingControls.AllDone}"
              SnapsToDevicePixels="True">
        <elements:AutoGrayImage Source="pack://application:,,,/Images/refresh.png" RenderOptions.BitmapScalingMode="HighQuality" 
              Margin="5"/>
      </Button>
      <!-- Counter -->
      <TextBlock Canvas.Left="417" Canvas.Top="201" Foreground="Gray" Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Bottom">
        <Run Text="{Binding LoadingControls.DoneTasks, Mode=OneWay}"/>
        /
        <Run Text="{Binding LoadingControls.ContainTasks, Mode=OneWay}"/>
      </TextBlock>
      <!-- Task list -->
      <ListBox x:Name="TaskContainer" Canvas.Left="295" Canvas.Top="217" Height="350" Grid.Row="1"
             ItemsSource="{Binding LoadingControls}"
             ItemTemplate="{StaticResource LoadingButton_Template}"
             ItemContainerStyle="{DynamicResource TaskContainer_ItemContainerStyle}" >
        <ListBox.ItemsPanel>
          <ItemsPanelTemplate>
            <StackPanel IsEnabled="{Binding LoadingControls.AllDone}"/> <!-- By default Virtualization Panel which block RefreshAllCommand -->
          </ItemsPanelTemplate>
        </ListBox.ItemsPanel>
      </ListBox>
    </Grid>


    <Button Style="{DynamicResource ButtonStyle1}" Canvas.Left="712" Canvas.Top="42" Height="40" Width="40"
            Command="{Binding OpenChildWindowCommand}">
      Open Window Button
    </Button>
  </Canvas>
</Window>

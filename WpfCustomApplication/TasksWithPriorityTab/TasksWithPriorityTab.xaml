<UserControl x:Class="WpfCustomApplication.TasksWithPriorityTab"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WpfCustomApplication"
             xmlns:elements="clr-namespace:WpfElements;assembly=WpfElements"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             x:Name="TaskWithPriorityControl">
  <Grid>
    <Grid.Resources>
      <DataTemplate x:Key="LoadingButton_Template">
        <StackPanel Orientation="Horizontal">
          <Grid Width="20" >
            <!-- Картинка индикатор загрузки -->
            <Image x:Name="SpinImage"
                 Source="pack://application:,,,/TasksWithPriorityTab/Images/circle.png"
                 RenderOptions.BitmapScalingMode="HighQuality" RenderTransformOrigin="0.5,0.5">
              <Image.RenderTransform>
                <RotateTransform x:Name="ImageRotateTransform" Angle="0"/>
              </Image.RenderTransform>
              <Image.Style>
                <Style TargetType="Image">
                  <Setter Property="Visibility" Value="Hidden"/>
                  <Style.Triggers>
                    <!-- Синхронизированная крутилка для всех -->
                    <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                      <BeginStoryboard  x:Name="SpinningStoryboard">
                        <Storyboard>
                          <DoubleAnimation Storyboard.TargetProperty="(Image.RenderTransform).(Angle)"
                                         From="0" To="360" Duration="00:00:01.000" RepeatBehavior="Forever"/>
                        </Storyboard>
                      </BeginStoryboard>
                    </EventTrigger>
                    <DataTrigger Binding="{Binding IsBusy}" Value="True">
                      <Setter Property="Visibility" Value="Visible"/>
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </Image.Style>
            </Image>
            <Image RenderOptions.BitmapScalingMode="HighQuality">
              <Image.Style>
                <Style TargetType="Image">
                  <Setter Property="Visibility" Value="Collapsed"/>
                  <Style.Triggers>
                    <!-- Картинка OnHold -->
                    <DataTrigger Binding="{Binding IsOnHold}" Value="True">
                      <Setter Property="Source" Value="pack://application:,,,/TasksWithPriorityTab/Images/onhold.png"/>
                      <Setter Property="Visibility" Value="Visible"/>
                    </DataTrigger>
                    <!-- Картинка всё Ок -->
                    <DataTrigger Binding="{Binding Status, Converter={StaticResource EnumEqualsParameterConverter}, ConverterParameter=OK}" Value="True">
                      <Setter Property="Source" Value="pack://application:,,,/TasksWithPriorityTab/Images/check.png"/>
                      <Setter Property="Visibility" Value="Visible"/>
                    </DataTrigger>
                    <!-- Картинка проблемы -->
                    <DataTrigger Binding="{Binding Status, Converter={StaticResource EnumEqualsParameterConverter}, ConverterParameter=NegativeResult}" Value="True">
                      <Setter Property="Source" Value="pack://application:,,,/TasksWithPriorityTab/Images/error.png"/>
                      <Setter Property="Visibility" Value="Visible"/>
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </Image.Style>
            </Image>
          </Grid>
          <FrameworkElement Width="20"/>
          <Button Command="{Binding Path=DataContext.EmulateLoadingCommand, Source={x:Reference TaskWithPriorityControl}}"
                  CommandParameter="{Binding }"
                  Width="170" Height="25">
            <Button.IsEnabled>
              <MultiBinding Converter="{StaticResource MultiBoolConverter}"
                            ConverterParameter="XOR">
                <Binding Path="IsBusy"/>
                <Binding Path="IsOnHold"/>
              </MultiBinding>
            </Button.IsEnabled>
            <TextBlock Text="{Binding }"/>
          </Button>
        </StackPanel>
      </DataTemplate>

    </Grid.Resources>

    <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
      <Grid.RowDefinitions>
        <RowDefinition/>
        <RowDefinition Height="auto"/>
      </Grid.RowDefinitions>
      <!-- Refresh button -->
      <Button Height="30" Width="30" Grid.Row="0" HorizontalAlignment="Left" Margin="0,0,0,1"
              Style="{DynamicResource TaskContainer_RefreshButton}"
              Command="{Binding RefreshAllCommand}"
              IsEnabled="{Binding LoadingControls.AllDone}"
              SnapsToDevicePixels="True">
        <elements:AutoGrayImage Source="pack://application:,,,/TasksWithPriorityTab/Images/refresh.png" RenderOptions.BitmapScalingMode="HighQuality" 
              Margin="5"/>
      </Button>
      <!-- Counter -->
      <TextBlock Canvas.Left="417" Canvas.Top="201" Foreground="Gray" Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Bottom">
        <Run Text="{Binding LoadingControls.DoneTasks, Mode=OneWay}"/>
        /
        <Run Text="{Binding LoadingControls.ContainTasks, Mode=OneWay}"/>
      </TextBlock>
      <!-- Task list -->
      <ListBox x:Name="TaskContainer" Canvas.Left="295" Canvas.Top="217" Height="350" Grid.Row="1"
             ItemsSource="{Binding LoadingControls}"
             ItemTemplate="{StaticResource LoadingButton_Template}"
             ItemContainerStyle="{DynamicResource TaskContainer_ItemContainerStyle}" >
        <ListBox.ItemsPanel>
          <ItemsPanelTemplate>
            <StackPanel IsEnabled="{Binding LoadingControls.AllDone}"/>
            <!-- By default Virtualization Panel which block RefreshAllCommand -->
          </ItemsPanelTemplate>
        </ListBox.ItemsPanel>
      </ListBox>
    </Grid>

    <!-- Open child window -->
    <Button VerticalAlignment="Top" HorizontalAlignment="Right" Height="40" Width="40"
            Style="{DynamicResource ButtonGradient}" 
            Command="{Binding OpenChildWindowCommand}"
            Content="{Binding ActionText}">
    </Button>

    <!-- Dialog modalwindow -->
    <!--<elements:DialogPanel Height="100" Width="200" Canvas.Left="400" Canvas.Top="112" 
                          Background="AliceBlue"
                          >
        <Grid  
          Background="AliceBlue">
          <Button Height="20" Width="40"/>
        </Grid>
      </elements:DialogPanel>-->
  </Grid>
</UserControl>

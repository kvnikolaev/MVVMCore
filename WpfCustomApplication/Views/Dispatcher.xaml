<UserControl x:Class="WpfCustomApplication.Dispatcher"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:WpfCustomApplication"
             xmlns:elements="clr-namespace:WpfElements;assembly=WpfElements"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             x:Name="DispatcherControl">
  <UserControl.Resources>
  </UserControl.Resources>
  <Grid>
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="auto"/>
      </Grid.ColumnDefinitions>
      <ListView BorderThickness="0" SelectionMode="Extended" x:Name="ListSome"
                Grid.Column="0"
                ItemsSource="{Binding TabPager.AllTabPages}">

        <ListView.Resources>
          <Style TargetType="ListViewItem">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="ContextMenu">
              <Setter.Value>
                <ContextMenu>
                  <MenuItem Header="Open Tab" Command="{Binding Path=DataContext.OpenTabCommand, Source={x:Reference DispatcherControl}}" CommandParameter="{Binding Value}"/>
                  <MenuItem Header="Close Tab" Command="{Binding Path=DataContext.CloseTabCommand, Source={x:Reference DispatcherControl}}" CommandParameter="{Binding Value}"/>
                  <Separator/>
                  <MenuItem Header="Block/Unblock" Command="{Binding Path=DataContext.BlockClosingCommand, Source={x:Reference DispatcherControl}}" CommandParameter="{Binding Value}"/>
                  <Separator/>
                  <MenuItem Header="Up Tab in list"/>
                  <MenuItem Header="Down Tab in list"/>
                  <Separator/>
                  <MenuItem Header="Alert tab"/>
                </ContextMenu>
              </Setter.Value>
            </Setter>
            <Setter Property="elements:ControlDoubleClick.Command"
                    Value="{Binding Path=DataContext.OpenTabCommand, Source={x:Reference DispatcherControl}}"/>
            <Setter Property="elements:ControlDoubleClick.CommandParameter"
                    Value="{Binding Value}"/>
          </Style>
        </ListView.Resources>

        <ListView.View>
          <GridView>
            <GridViewColumn Header="Id" DisplayMemberBinding="{Binding Key}"/>
            <GridViewColumn Header="Загаловок" DisplayMemberBinding="{Binding Value.Title}"/>
            <GridViewColumn Header="Закреплено" Width="80">
              <GridViewColumn.CellTemplate>
                <DataTemplate>
                  <TextBlock TextAlignment="Center" FontWeight="Bold">
                    <TextBlock.Style>
                      <Style TargetType="TextBlock">
                        <Style.Triggers>
                          <DataTrigger Binding="{Binding Value.CanClose}" Value="False">
                            <Setter Property="Text" Value="✓"/>
                          </DataTrigger>
                        </Style.Triggers>
                      </Style>
                    </TextBlock.Style>
                  </TextBlock>
                </DataTemplate>
              </GridViewColumn.CellTemplate>
            </GridViewColumn>
          </GridView>
        </ListView.View>
      </ListView>
      <DockPanel Grid.Column="1">
        <TextBlock DockPanel.Dock="Top">
          Всего вкладок:
          <Run Text="{Binding TabPager.AllTabPages.Count, Mode=OneWay}"/>
        </TextBlock>
        <!-- Collection keys editor -->
        <ListView ItemsSource="{Binding KeysCollection}" Width="150" x:Name="keyList">
          <ListView.Resources>
            <Style TargetType="ListViewItem">
              <Setter Property="elements:ControlDoubleClick.Command"
                      Value="{Binding Path=EditModeCommand}"/>
            </Style>
          </ListView.Resources>
          <ListView.ItemTemplate>
            <DataTemplate>
              <Grid>
                <TextBlock Text="{Binding Key}"/>
                <TextBox x:Name="Editor" Visibility="Hidden"
                         Text="{Binding ChangingKey, UpdateSourceTrigger=PropertyChanged}" 
                         elements:ControlLostFocus.Command="{Binding CancelEditingCommand}"
                         elements:ControlLostFocus.CommandParameter="{Binding }">
                  <TextBox.InputBindings>
                    <KeyBinding Key="Esc" Command="{Binding CancelEditingCommand}" CommandParameter="{Binding }"/>
                    <KeyBinding Key="Return" Command="{Binding EnterEditingCommand}" CommandParameter="{Binding }"/>
                  </TextBox.InputBindings>
                </TextBox>
              </Grid>
              <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding EditionMode}" Value="True">
                  <Setter TargetName="Editor" Property="Visibility" Value="Visible"/>
                  <Setter TargetName="Editor" Property="FocusManager.FocusedElement" Value="{Binding RelativeSource={RelativeSource Self}}"/>
                </DataTrigger>
              </DataTemplate.Triggers>
            </DataTemplate>
          </ListView.ItemTemplate>
        </ListView>
      </DockPanel>
    </Grid>
  </Grid>
</UserControl>
